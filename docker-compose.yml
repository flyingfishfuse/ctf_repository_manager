version: "3"
#################################################################
##
## THIS FILE CONTAINS THE ENTRIES FOR THE INFRASTRUCTURE
# To create the network you run the following:
## docker network create net --gateway 192.168.0.1 --subnet 192.168.0.1/24
##    ALSO: --gateway --ip-range and --aux-address can be used
# https://docs.docker.com/engine/reference/commandline/network_create/
#################################################################

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    hostname: traefik
    domainname: moopbox.wtf
    command:
     - "--api.insecure=true"
     - "--api.dashboard=true"
     - "--providers.docker=true"
     - "--providers.docker.watch"
     - "--providers.docker.exposedbydefault=true"
     - "--api"
     - "--entrypoints.web.address=:80"
     - "--metrics"
     - "--metrics.prometheus=true"

     ## Required for explicitly setting domain of router
     - "--metrics.prometheus.manualrouting=true"

     # Entry point used to expose metrics.
     - "--metrics.prometheus.entryPoint=metrics"
     - "--entryPoints.metrics.address=:8082" 

      #Enable metrics on routers, entrypoints, and services
     - "--metrics.prometheus.addEntryPointsLabels=true"
     - "--metrics.prometheus.addrouterslabels=true"
     - "--metrics.prometheus.addServicesLabels=true"

     # Scarping Timing In Seconds
     - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
    networks:
      net:
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - target: 80
        published: 80
        mode: host
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`traefik.moopbox.wtf`)"
      # HTTP
        - "traefik.http.routers.traefik.entrypoints=web"
        - "traefik.http.routers.traefik.service=traefikService"
        - "traefik.http.routers.traefikService.service=api@internal"
        - "traefik.http.services.traefikService.loadBalancer.server.port=8080"
        #- "traefik.docker.network=net"
    restart: unless-stopped

#################################################################
#                   CTFd User Interface
#################################################################
  ctfd:
    image: ctfd/ctfd
    domainname: moopbox.wtf
    hostname: ctfd
    container_name: ctfd
    #build:
    #  context: ./containers/ctfd
    #  dockerfile: Dockerfile
    user: root
    restart: always
    environment:
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - WORKERS=${WORKERS}
      - LOG_FOLDER=${LOG_FOLDER}
      - ACCESS_LOG=${ACCESS_LOG}
      - ERROR_LOG=${ERROR_LOG}
      - REVERSE_PROXY=${REVERSE_PROXY}
    volumes:
      - ctfd_logs:/var/log/CTFd
      - ctfd_uploads:/var/uploads
    depends_on:
      - db
#        - nginx
    expose:
      - 8000
    #ports:
    #  - 8000:8000
      #extra_hosts:
    #  - "nginx:${NGINXIP}"
    # I have been trying to avoid this
    networks:
      internal:
      net:
      #  ipv4_address: ${CTFDIP}
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.ctfd.rule=Host(`ctfd.moopbox.wtf)`)"
        - "traefik.http.routers.ctfd.entrypoints=web"
        - "traefik.http.routers.ctfd.service=ctfdService"
        - "traefik.http.services.ctfdService.loadBalancer.server.port=8000"
        - "traefik.docker.network=net"
#################################################################
#                   network tools
#################################################################
#  parrot:
#    image: parrotsec/security
#    hostname: parrot
#    container_name: parrot
#    networks:
#      - internal
#      - net
#    volumes:
#      - "/run/docker.sock:/var/run/docker.sock"
#    restart: unless-stopped
          
#################################################################
#                   REDIS SERVER
#################################################################
  cache:
      image: redis
      depends_on:
        - traefik
        #- nginx
      hostname: cache
      container_name: cache
      #command: redis-server --appendonly yes
      ports:
        #- ${REDISPORT}:6379
        - 6379:6379
      volumes:
        - redis:/data
      restart: unless-stopped
      networks:
        internal:
#################################################################
#                   MYSQL SERVER
#################################################################
  db:
      image: mariadb:10.4.12
#      depends_on:
#        - nginx
      restart: always
      container_name: mariadb
      environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
      # This command is required to set important mariadb defaults
      command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --wait_timeout=28800, --log-warnings=0]
      volumes:
        - mysql:/var/lib/mysql
      networks:
          internal:
#################################################################
#     DNS SERVER
#################################################################   


#################################################################
#     NETWORKS SECTION
#################################################################      
networks:
  internal:
    internal: true

  net:
    external: true

volumes:
  redis: {}
  mysql: {}
  ctfd_logs: {}
  ctfd_uploads: {}